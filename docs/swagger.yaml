basePath: /api
definitions:
  service.CreateUserRequests:
    properties:
      email:
        example: user@example.com
        type: string
      nickname:
        example: 新用户
        type: string
      password:
        example: "123456"
        type: string
      username:
        example: newuser
        type: string
    required:
    - email
    - password
    - username
    type: object
  service.LoginRequests:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  service.LoginResponses:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIs...
        type: string
    type: object
  service.UpdateUserRequests:
    properties:
      email:
        example: user@example.com
        type: string
      nickname:
        example: 用户昵称
        type: string
      password:
        example: "123456"
        type: string
    type: object
  service.UserInfo:
    properties:
      created_at:
        example: "2023-01-01 12:00:00"
        type: string
      email:
        example: admin@example.com
        type: string
      id:
        example: 1
        type: integer
      nickname:
        example: 管理员
        type: string
      updated_at:
        example: "2023-01-01 12:00:00"
        type: string
      username:
        example: admin
        type: string
    type: object
  utils.Response:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: success
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: FastGin 服务API文档
  title: FastGin API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: 处理用户登录请求，返回登录凭证
      parameters:
      - description: 登录请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.LoginRequests'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功返回token信息
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.LoginResponses'
              type: object
        "400":
          description: 无效的请求参数
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
        "401":
          description: 登录失败
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 用户登录
      tags:
      - 用户管理
  /users:
    get:
      consumes:
      - application/json
      description: 分页获取用户列表
      parameters:
      - description: 页码，默认为1
        in: query
        name: page
        type: integer
      - description: 每页数量，默认为10
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户列表成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.UserInfo'
                  type: array
                total:
                  type: integer
              type: object
        "500":
          description: 获取用户列表失败
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 获取用户列表
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 创建一个新的用户账号
      parameters:
      - description: 创建用户请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.CreateUserRequests'
      produces:
      - application/json
      responses:
        "200":
          description: 创建用户成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 无效的请求参数
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: 创建用户失败
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 创建新用户
      tags:
      - 用户管理
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除用户成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: 删除用户失败
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 获取指定用户的详细信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户信息成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/service.UserInfo'
              type: object
        "500":
          description: 获取用户信息失败
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 获取用户信息
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新指定用户的信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新用户请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.UpdateUserRequests'
      produces:
      - application/json
      responses:
        "200":
          description: 更新用户成功
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 无效的请求参数
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: 更新用户失败
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: 更新用户信息
      tags:
      - 用户管理
swagger: "2.0"
